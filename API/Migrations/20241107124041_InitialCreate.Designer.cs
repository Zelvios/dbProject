// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dbProject.Data;

#nullable disable

namespace dbProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241107124041_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("dbProject.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TaskId");

                    b.HasIndex("TeamId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("dbProject.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrentTaskTaskId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TeamId");

                    b.HasIndex("CurrentTaskTaskId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("dbProject.Models.TeamWorker", b =>
                {
                    b.Property<int>("TeamWorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TeamWorkerId");

                    b.HasIndex("TeamId");

                    b.HasIndex("WorkerId");

                    b.ToTable("TeamWorkers");
                });

            modelBuilder.Entity("dbProject.Models.Todo", b =>
                {
                    b.Property<int>("TodoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TaskId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TodoId");

                    b.HasIndex("TaskId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("dbProject.Models.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrentTodoTodoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WorkerId");

                    b.HasIndex("CurrentTodoTodoId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("dbProject.Models.Task", b =>
                {
                    b.HasOne("dbProject.Models.Team", null)
                        .WithMany("Tasks")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("dbProject.Models.Team", b =>
                {
                    b.HasOne("dbProject.Models.Task", "CurrentTask")
                        .WithMany()
                        .HasForeignKey("CurrentTaskTaskId");

                    b.Navigation("CurrentTask");
                });

            modelBuilder.Entity("dbProject.Models.TeamWorker", b =>
                {
                    b.HasOne("dbProject.Models.Team", null)
                        .WithMany("Workers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dbProject.Models.Worker", null)
                        .WithMany("Teams")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dbProject.Models.Todo", b =>
                {
                    b.HasOne("dbProject.Models.Task", null)
                        .WithMany("Todos")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("dbProject.Models.Worker", null)
                        .WithMany("Todos")
                        .HasForeignKey("WorkerId");
                });

            modelBuilder.Entity("dbProject.Models.Worker", b =>
                {
                    b.HasOne("dbProject.Models.Todo", "CurrentTodo")
                        .WithMany()
                        .HasForeignKey("CurrentTodoTodoId");

                    b.Navigation("CurrentTodo");
                });

            modelBuilder.Entity("dbProject.Models.Task", b =>
                {
                    b.Navigation("Todos");
                });

            modelBuilder.Entity("dbProject.Models.Team", b =>
                {
                    b.Navigation("Tasks");

                    b.Navigation("Workers");
                });

            modelBuilder.Entity("dbProject.Models.Worker", b =>
                {
                    b.Navigation("Teams");

                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
